#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.5 on Thu Apr 16 16:52:58 2020
#

import wx
import wx.lib.agw.shapedbutton as SB
import random

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade
diccionario_2048 = {"A": "icons\\3-1.png" ,"B": "icons\\3-2.png", "C": "icons\\3-3.png", "D": "icons\\3-4.png", "E": "icons\\3-5.png", "F": "icons\\3-6.png", "G": "icons\\3-7.png", "H": "icons\\3-8.png", "I": "icons\\3-9.png",
                    "J": "icons\\3-10.png",
                    "K": "icons\\3-11.png", ".":"icons\\Vacio.png", "*": "icons\\Bloque.png"}
diccionario_1024 = {"A": "icons\\2-1.png" ,"B": "icons\\2-2.png", "C": "icons\\2-3.png", "D": "icons\\2-4.png", "E": "icons\\2-5.png", "F": "icons\\2-6.png", "G": "icons\\2-7.png", "H": "icons\\2-8.png", "I": "icons\\2-9.png",
                    "J": "icons\\2-10.png",
                    "K": "icons\\2-11.png", ".":"icons\\Vacio.png", "*": "icons\\Bloque.png"}
diccionario_abc = {"A": "icons\\0-1.png" ,"B": "icons\\0-2.png", "C": "icons\\0-3.png", "D": "icons\\0-4.png", "E": "icons\\0-5.png", "F": "icons\\0-6.png", "G": "\\icons\\0-7.png", "H": "\\icons\\0-8.png", "I": "\\icons\\0-9.png",
                    "J": "\\icons\\0-10.png",
                    "K": "\\icons\\0-11.png", ".":"\\icons\\Vacio.png", "*": "\\icons\\Bloque.png"}
diccionario_nivel = {"A": "\\icons\\1-1.png" ,"B": "\\icons\\1-2.png", "C": "\\icons\\1-3.png", "D": "\\icons\\1-4.png", "E": "\\icons\\1-5.png", "F": "\\icons\\1-6.png", "G": "\\icons\\1-7.png", "H": "\\icons\\1-8.png", "I": "\\icons\\1-9.png",
                    "J": "\\icons\\1-10.png",
                    "K": "\\icons\\1-11.png", ".":"\\icons\\Vacio.png", "*": "\\icons\\Bloque.png"}

class MiVentana(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MiVentana.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((700, 507))
        self.newsheet_button = SB.SBitmapButton(self, wx.ID_ANY, wx.Bitmap("icons\\newsheet.ico", wx.BITMAP_TYPE_ICO))
        self.open_button = SB.SBitmapButton(self, wx.ID_ANY, wx.Bitmap("icons\\abrir.ico", wx.BITMAP_TYPE_ICO))
        self.bitmap_button_1 = SB.SBitmapButton(self, wx.ID_ANY, wx.Bitmap("icons\\save.ico", wx.BITMAP_TYPE_ICO))
        self.bitmap_button_undo = SB.SBitmapButton(self, wx.ID_ANY, wx.Bitmap("icons\\undo.ico", wx.BITMAP_TYPE_ICO))
        self.radio_btn_2048 = wx.RadioButton(self, wx.ID_ANY, "")
        self.radio_btn_abc = wx.RadioButton(self, wx.ID_ANY, "")
        self.radio_btn_nivel = wx.RadioButton(self, wx.ID_ANY, "")
        self.radio_btn_1024 = wx.RadioButton(self, wx.ID_ANY, "")
        self.matrix = wx.Panel(self, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MiVentana.__set_properties
        self.SetTitle("2048")
        self.SetBackgroundColour(self.newsheet_button.GetBackgroundColour())
        self.radio_btn_nivel.SetFont(wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Comic Sans MS"))
        self.matrix.SetMinSize((370, 300))
        self.matrix.SetBackgroundColour(wx.Colour("#ffffff"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MiVentana.__do_layout
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_2 = wx.GridSizer(3, 3, 0, 0)
        sizer_4 = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, "MODO"), wx.HORIZONTAL)
        grid_sizer_5 = wx.GridSizer(4, 2, 0, 0)
        grid_sizer_3 = wx.GridSizer(2, 1, 0, 0)
        grid_sizer_4 = wx.GridSizer(1, 3, 0, 0)
        grid_sizer_4.Add(self.newsheet_button, 0, wx.EXPAND | wx.LEFT | wx.TOP, 10)
        grid_sizer_4.Add(self.open_button, 0, wx.EXPAND | wx.LEFT | wx.TOP, 10)
        grid_sizer_4.Add(self.bitmap_button_1, 0, wx.EXPAND | wx.LEFT | wx.TOP, 10)
        grid_sizer_3.Add(grid_sizer_4, 1, wx.EXPAND, 0)
        grid_sizer_3.Add((0, 0), 0, 0, 0)
        grid_sizer_2.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        grid_sizer_2.Add((0, 0), 0, 0, 0)
        grid_sizer_2.Add(self.bitmap_button_undo, 0, wx.ALIGN_CENTER | wx.BOTTOM | wx.LEFT, 53)
        label_2048 = wx.StaticText(self, wx.ID_ANY, "2048")
        label_2048.SetFont(wx.Font(12, wx.FONTFAMILY_SCRIPT, wx.FONTSTYLE_ITALIC, wx.FONTWEIGHT_BOLD, 0, "Comic Sans MS"))
        grid_sizer_5.Add(label_2048, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_5.Add(self.radio_btn_2048, 0, wx.ALIGN_CENTER, 0)
        label_abc = wx.StaticText(self, wx.ID_ANY, "ABC")
        label_abc.SetFont(wx.Font(12, wx.FONTFAMILY_SCRIPT, wx.FONTSTYLE_ITALIC, wx.FONTWEIGHT_BOLD, 0, "Comic Sans MS"))
        grid_sizer_5.Add(label_abc, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_5.Add(self.radio_btn_abc, 0, wx.ALIGN_CENTER, 0)
        label_nivel = wx.StaticText(self, wx.ID_ANY, "Nivel")
        label_nivel.SetFont(wx.Font(12, wx.FONTFAMILY_SCRIPT, wx.FONTSTYLE_ITALIC, wx.FONTWEIGHT_BOLD, 0, "Comic Sans MS"))
        grid_sizer_5.Add(label_nivel, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_5.Add(self.radio_btn_nivel, 0, wx.ALIGN_CENTER, 0)
        label_1024 = wx.StaticText(self, wx.ID_ANY, "1024")
        label_1024.SetFont(wx.Font(12, wx.FONTFAMILY_SCRIPT, wx.FONTSTYLE_ITALIC, wx.FONTWEIGHT_BOLD, 0, "Comic Sans MS"))
        grid_sizer_5.Add(label_1024, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_5.Add(self.radio_btn_1024, 0, wx.ALIGN_CENTER, 0)
        sizer_4.Add(grid_sizer_5, 1, wx.EXPAND, 0)
        grid_sizer_2.Add(sizer_4, 0, wx.EXPAND | wx.LEFT, 8)
        grid_sizer_2.Add(self.matrix, 1, wx.ALIGN_CENTER | wx.LEFT, 194)
        grid_sizer_2.Add((0, 0), 0, 0, 0)
        label_2 = wx.StaticText(self, wx.ID_ANY, "AUTORES:\n@Miguel\n@Abdu")
        label_2.SetMinSize((112, 100))
        label_2.SetFont(wx.Font(16, wx.FONTFAMILY_SCRIPT, wx.FONTSTYLE_ITALIC, wx.FONTWEIGHT_BOLD, 0, "Comic Sans MS"))
        grid_sizer_2.Add(label_2, 0, wx.ALIGN_BOTTOM | wx.LEFT, 7)
        label_movs = wx.StaticText(self, wx.ID_ANY, "MOVIMIENTOS: ")
        label_movs.SetFont(wx.Font(12, wx.FONTFAMILY_SCRIPT, wx.FONTSTYLE_ITALIC, wx.FONTWEIGHT_BOLD, 0, "Comic Sans MS"))
        grid_sizer_2.Add(label_movs, 0, wx.ALIGN_CENTER | wx.TOP, 25)
        label_puntos = wx.StaticText(self, wx.ID_ANY, "PUNTOS: ")
        label_puntos.SetFont(wx.Font(12, wx.FONTFAMILY_SCRIPT, wx.FONTSTYLE_ITALIC, wx.FONTWEIGHT_BOLD, 0, "Comic Sans MS"))
        grid_sizer_2.Add(label_puntos, 0, wx.ALIGN_CENTER_VERTICAL | wx.TOP, 25)
        sizer_3.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_3)
        self.Layout()
        # end wxGlade

# end of class MiVentana

class Matriz(MiVentana):
    matriz = []
    def __init__(self):
        matriz = self.Matrix()

    def Matrix(self):
        for i in range(3):
            self.matriz.append([" "] * 3)
        while i < 2:
            rand_r = random.randint(0, 3 - 1)
            rand_c = random.randint(0, 3 - 1)
            if self.matriz[rand_r][rand_c] == " ":
                self.matriz [rand_r][rand_c] = diccionario_2048["*"]
        while i < 2:
            rand_r = random.randint(0, 3 - 1)
            rand_c = random.randint(0, 3 - 1)
            if self.matriz[rand_r][rand_c] != diccionario_2048 ["*"]:
                self.matriz[rand_r][rand_c] = diccionario_2048["A"]
        for i in range (3):
            for j in range(3):
                if self.matriz [i][j] == " ":
                    self.matriz [i][j] = diccionario_2048["."]
        return self.matriz


        def Tablero(self):
            sizer_1 = wx.BoxSizer(wx.VERTICAL)
            sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
            grid_sizer_1 = wx.GridSizer(3, 3, large, width)
            bitmap_1 = wx.StaticBitmap(self.matrix, wx.ID_ANY, wx.Bitmap(
                "C:\\Users\\eldkt\\Downloads\\project-20200412T022146Z-001\\project\\icons\\0-1.png", wx.BITMAP_TYPE_ANY))
            grid_sizer_1.Add(bitmap_1, 0, wx.ALIGN_CENTER, 0)
            grid_sizer_1.Add((0, 0), 0, 0, 0)
            grid_sizer_1.Add((0, 0), 0, 0, 0)
            grid_sizer_1.Add((0, 0), 0, 0, 0)
            grid_sizer_1.Add((0, 0), 0, 0, 0)
            grid_sizer_1.Add((0, 0), 0, 0, 0)
            grid_sizer_1.Add((0, 0), 0, 0, 0)
            grid_sizer_1.Add((0, 0), 0, 0, 0)
            grid_sizer_1.Add((0, 0), 0, 0, 0)
            sizer_2.Add(grid_sizer_1, 1, wx.EXPAND, 0)
            self.matrix.SetSizer(sizer_2)
            sizer_1.Add(self.matrix, 1, wx.EXPAND, 0)
            self.SetSizer(sizer_1)
            self.matrix.Layout()



class MyApp(wx.App):
    def OnInit(self):
        self.frame_20148 = MiVentana(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame_20148)
        self.frame_20148.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
